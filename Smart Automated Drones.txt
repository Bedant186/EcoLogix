public class DroneDelivery {

    // Function to calculate the optimal route (based on weather, traffic, etc.)
    public static String calculateOptimalRoute(double distance, boolean isWeatherClear, boolean isTrafficLow) {
        if (isWeatherClear && isTrafficLow) {
            return "Optimal route selected: Shortest path";
        } else if (isWeatherClear && !isTrafficLow) {
            return "Optimal route selected: Avoid heavy traffic";
        } else {
            return "Route not optimal due to weather conditions.";
        }
    }

    // Function to track drone status (simplified)
    public static String trackDrone(int droneID) {
        // In real implementation, this would fetch live data from a drone API
        return "Drone " + droneID + " is en route. Estimated time of arrival: 15 mins.";
    }

    public static void main(String[] args) {
        double distance = 10.5;  // in kilometers
        boolean isWeatherClear = true;
        boolean isTrafficLow = false;

        // Calculate optimal route
        String optimalRoute = calculateOptimalRoute(distance, isWeatherClear, isTrafficLow);
        System.out.println(optimalRoute);  // Output the optimal route

        // Track drone status
        int droneID = 1;
        String droneStatus = trackDrone(droneID);
        System.out.println(droneStatus);  // Output drone status
    }
}
